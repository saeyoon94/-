2018년 2월 말 개발 시작 ~ 

키움증권 API를 통해 전 코스피/코스닥 전 종목(ETF와 스팩, 우선주 등은 제외)의 종목코드와 종목명, 상장일, 테마 등의 데이터를 받고, 전 종목에 대해 일자별 시가, 고가, 저가, 종가, 거래량, 거래대금, 개인수급, 외인수급, 기관수급, 연기금수급, 공매도비율, 공여율, 잔고율을 받은 다음, 이것에 더해 각 일자별 이동평균선, 기간별 거래량 이동평균선, 볼린저밴드, CCI, RSI, 스토캐스틱, MACD, 일목균형표, 52주 신고가/신저가를 계산하여 데이터베이스에 저장하는 코드가 example.py

일자별로 나온 리포트들의 코드, 작성일, 목표주가, 투자의견을 한경컨센서스로부터 스크래이핑해서 데이터베이스에 저장하는 코드가 report_data.py. 예전에 공부하던 책에 있던 예제인 위키피디아의 데이터를 바탕으로 word2vec 모델을 만들어 놓은 것이 있는데, 이것을 바탕으로 리포트의 제목이 긍정적인지/부정적인지에 대한 점수를 내어 하나의 칼럼으로 만들고자 하였다. 그러나 제목이 온전하게 스크레이핑되지 않았고, 실행시간이 너무 오래걸려서 포기.

merge_price&report.py를 이용하여 주식 데이터와 리포트 데이터를 양식에 맞게 병합

증권사의 목표주가와 당시 주가의 괴리가 큰 경우 주가가 오른다라는 전략을 테스트해보기 위해서는 당시의 수정주가가 아닌 명목주가가 필요하므로, 이것을 따로 받아오는 코드가 nominal_price.py이다.

find_strategy.py는 구체적인 백테스트에 앞서 기본적으로 괜찮은 매수전략들을 시험해보기 위한 코드. 편의상 2007년 6월부터 2018년 2월까지를 테스트 기간으로 잡고, 시작시점 이후 상장한 종목들은 상장한지 1년 이후부터 테스트에 포함하였다(신규상장주 특유의 변동성을 배제하며 긴 기간동안 rolling한 데이터(52주 신고가, 224일 이평선 등)이 있기 때문에 모든 데이터를 유효하게 사용하려면 적어도 상장한지 1년은 되어야 한다고 판단). 특정 전략을 정한 다음 전 종목별/일자별 2중반복문을 돌려 조건에 맞는 경우 매수, 그 이후 1일, 3일, 1주일,2주일, 1달, 3달, 6달의 예후를 계산하여 이 수익률의 산술평균, 기하평균, 상승 활률, 각 보유기간마다 연도별 평균상승률, 연도별 충현빈도, 보유기간별 수익률의 히스토그램을 전략 없이 임의로 매수했을때의 결과와 비교하여 나타낸 그래프와 리포트를 제공한다. 현재 이 프로그램을 바탕으로 적절한 전략을 찾고 있으며, 이후 구체적인 매수/매도/비중관리/레버리지 등의 종합적인 전략을 테스트해볼 수 있는 백테스트 프로그램을 개발할 예정이다.

데이터베이스는 용량이 너무 커서 업로드하지 않는다.



